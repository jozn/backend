extern crate serde_json;

use serde::{Deserialize, Serialize};
use std::collections::HashMap;

// Notes:
// + Generated by: https://transform.tools/json-to-rust-serde
// + This is striped down version of json output/

#[derive(Default, Debug, Clone, PartialEq, serde_derive::Serialize, serde_derive::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Root {
    pub graphql: Graphql,
}

#[derive(Default, Debug, Clone, PartialEq, serde_derive::Serialize, serde_derive::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Graphql {
    pub user: User,
}

#[derive(Default, Debug, Clone, PartialEq, serde_derive::Serialize, serde_derive::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct User {
    pub biography: String,
    #[serde(rename = "edge_followed_by")]
    pub edge_followed_by: EdgeFollowedBy,
    #[serde(rename = "full_name")]
    pub full_name: String,
    pub id: String,
    #[serde(rename = "is_private")]
    pub is_private: bool,
    #[serde(rename = "is_verified")]
    pub is_verified: bool,
    pub username: String,
    // pub edge_felix_video_timeline: EdgeFelixVideoTimeline, // IGTV
    #[serde(rename = "edge_owner_to_timeline_media")]
    pub edge_owner_to_timeline_media: EdgeOwnerToTimelineMedia, // Normal Posts
}

#[derive(Default, Debug, Clone, PartialEq, serde_derive::Serialize, serde_derive::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EdgeFollowedBy {
    pub count: i64,
}

#[derive(Default, Debug, Clone, PartialEq, serde_derive::Serialize, serde_derive::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EdgeOwnerToTimelineMedia {
    pub count: i64, // Post counts
    pub edges: Vec<PostEdge>,
}

#[derive(Default, Debug, Clone, PartialEq, serde_derive::Serialize, serde_derive::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PostEdge {
    pub node: PostNode,
}

#[derive(Default, Debug, Clone, PartialEq, serde_derive::Serialize, serde_derive::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct PostNode {
    // renamed from Node
    #[serde(rename = "__typename")]
    pub typename: String,
    pub id: String,
    pub shortcode: String,
    #[serde(rename = "is_video")]
    pub is_video: bool,
    #[serde(rename = "edge_media_to_caption")]
    pub edge_media_to_caption: EdgeMediaToCaption, // Video text
    #[serde(rename = "taken_at_timestamp")]
    pub taken_at_timestamp: i64,
}

#[derive(Default, Debug, Clone, PartialEq, serde_derive::Serialize, serde_derive::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct EdgeMediaToCaption {
    pub edges: Vec<Edge3>,
}

#[derive(Default, Debug, Clone, PartialEq, serde_derive::Serialize, serde_derive::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Edge3 {
    pub node: Node3,
}

#[derive(Default, Debug, Clone, PartialEq, serde_derive::Serialize, serde_derive::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Node3 {
    pub text: String, // photo/video text
}

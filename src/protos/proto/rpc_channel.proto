syntax = "proto3";

package pb;

import "global.proto";

message ChannelAvatarAddParam {
    uint32 channel_id = 1;
}

message ChannelAvatarAddResponse {}

message ChannelAvatarDeleteParam {
    uint32 channel_id = 1;
}

message ChannelAvatarDeleteResponse {}

message ChannelAvatarGetListParam {
    uint32 channel_id = 1;
}

message ChannelAvatarGetListResponse {}

message ChannelSendMessageParam {
    uint32 channel_id = 1;
}

message ChannelSendMessageResponse {

}

message ChannelEditMessageParam {
    uint32 channel_id = 1;
}

message ChannelEditMessageResponse {

}

message ChannelPinMessageParam {
    uint32 channel_id = 1;
}

message ChannelPinMessageResponse {

}

message ChannelUnPinMessageParam {
    uint32 channel_id = 1;
}

message ChannelUnPinMessageResponse {

}

message ChannelDeleteMessageParam {
    uint32 channel_id = 1;
}

message ChannelDeleteMessageResponse {

}

message ChannelSetDraftParam {
    uint32 channel_id = 1;
}

message ChannelSetDraftResponse {

}

service RPC_Channel {
    //rpc Channel (Param) returns (Response);

    // CrDU
    rpc ChannelCreateChannel (ChannelCreateChannelParam) returns (ChannelCreateChannelResponse);
    rpc ChannelEditChannel (ChannelEditChannelParam) returns (ChannelEditChannelResponse);
    rpc ChannelDeleteChannel (ChannelDeleteChannelParam) returns (ChannelDeleteChannelResponse);

    // Author
    rpc ChannelAddAuthor (ChannelAddAuthorParam) returns (ChannelAddAuthorResponse);
    rpc ChannelChangeAuthorPermission (ChannelChangeAuthorPermissionParam) returns (ChannelChangeAuthorPermissionResponse);
    rpc ChannelRemoveAuthor (ChannelRemoveAuthorParam) returns (ChannelRemoveAuthorResponse);

    // Follow
    rpc ChannelFollowChannel (ChannelFollowChannelParam) returns (ChannelFollowChannelResponse);
    rpc ChannelUnFollowChannel (ChannelUnFollowChannelParam) returns (ChannelUnFollowChannelResponse);
    rpc ChannelRemoveFollowers (ChannelRemoveFollowersParam) returns (ChannelRemoveFollowersResponse);

    // Subscribe
    rpc ChannelSubscribe (ChannelSubscribeParam) returns (ChannelSubscribeResponse);
    rpc ChannelUnSubscribe (ChannelUnSubscribeParam) returns (ChannelUnSubscribeResponse);
    rpc ChannelRemoveSubscribers (ChannelRemoveSubscribersParam) returns (ChannelRemoveSubscribersResponse);

    // Privacy
    rpc ChannelChangePrivacy (ChannelChangePrivacyParam) returns (ChannelChangePrivacyResponse);
    rpc ChannelChangeDefaultPermission (ChannelChangeDefaultPermissionParam) returns (ChannelChangeDefaultPermissionResponse);
    rpc ChannelRevokeLink (ChannelRevokeLinkParam) returns (ChannelRevokeLinkResponse);
    rpc ChannelChangeUsername (ChannelChangeUsernameParam) returns (ChannelChangeUsernameResponse);
    rpc ChannelBlockChannel (ChannelBlockChannelParam) returns (ChannelBlockChannelResponse);

    // Messages
    rpc ChannelSendMessage (ChannelSendMessageParam) returns (ChannelSendMessageResponse);
    rpc ChannelEditMessage (ChannelEditMessageParam) returns (ChannelEditMessageResponse);
    rpc ChannelPinMessage (ChannelPinMessageParam) returns (ChannelPinMessageResponse);
    rpc ChannelUnPinMessage (ChannelUnPinMessageParam) returns (ChannelUnPinMessageResponse);
    rpc ChannelDeleteMessage (ChannelDeleteMessageParam) returns (ChannelDeleteMessageResponse); // remove?
    rpc ChannelDeleteMessages (ChannelDeleteMessagesParam) returns (ChannelDeleteMessagesResponse);
    rpc ChannelClearHistory (ChannelClearHistoryParam) returns (ChannelClearHistoryResponse);

    // Settings
    //rpc Channel (Param) returns (Response);


    // Others
    rpc ChannelAvatarAdd (ChannelAvatarAddParam) returns (ChannelAvatarAddResponse);
    rpc ChannelAvatarChange (ChannelAvatarChangeParam) returns (ChannelAvatarChangeResponse); // remove?
    rpc ChannelAvatarDelete (ChannelAvatarDeleteParam) returns (ChannelAvatarDeleteResponse);
    rpc ChannelAvatarGetList (ChannelAvatarGetListParam) returns (ChannelAvatarGetListResponse); // view?
    rpc ChannelSendDoingAction (ChannelSendDoingActionParam) returns (ChannelSendDoingActionResponse);
    rpc ChannelReportChannel (ChannelReportChannelParam) returns (ChannelReportChannelResponse);
    rpc ChannelReportMessage (ChannelReportMessageParam) returns (ChannelReportMessageResponse);

    // Views
    rpc ChannelGetFull (ChannelGetFullParam) returns (ChannelGetFullResponse);
    rpc ChannelGetMessagesList (ChannelGetMessagesListParam) returns (ChannelGetMessagesListResponse); // posts?
    rpc ChannelGetMediaList (ChannelGetMediaListParam) returns (ChannelGetMediaListResponse);
    rpc ChannelGetAuthors (ChannelGetAuthorsParam) returns (ChannelGetAuthorsResponse);
    rpc ChannelGetFollowers (ChannelGetFollowersParam) returns (ChannelGetFollowersResponse);
    rpc ChannelGetFollowings (ChannelGetFollowingsParam) returns (ChannelGetFollowingsResponse);
    rpc ChannelGetSubscribers (ChannelGetSubscribersParam) returns (ChannelGetSubscribersResponse);
    rpc ChannelBlocked (ChannelBlockedParam) returns (ChannelBlockedResponse);

    // Deprecated
    rpc ChannelSetDraft (ChannelSetDraftParam) returns (ChannelSetDraftResponse); // draft via direct

}

// CrDU
message ChannelCreateChannelParam {
    uint32 group_id = 1;
}

message ChannelCreateChannelResponse {

}

message ChannelEditChannelParam {
    uint32 group_id = 1;
}

message ChannelEditChannelResponse {

}

message ChannelDeleteChannelParam {
    uint32 group_id = 1;
}

message ChannelDeleteChannelResponse {

}

// Author
message ChannelAddAuthorParam {
}

message ChannelAddAuthorResponse {
}

message ChannelChangeAuthorPermissionParam {
}

message ChannelChangeAuthorPermissionResponse {
}

message ChannelRemoveAuthorParam {
}

message ChannelRemoveAuthorResponse {
}

// Follow
message ChannelFollowChannelParam {
}

message ChannelFollowChannelResponse {
}

message ChannelUnFollowChannelParam {
}

message ChannelUnFollowChannelResponse {
}

message ChannelRemoveFollowersParam {
}

message ChannelRemoveFollowersResponse {
}

// Subscribe

message ChannelSubscribeParam {
}

message ChannelSubscribeResponse {
}

message ChannelUnSubscribeParam {
}

message ChannelUnSubscribeResponse {
}

message ChannelRemoveSubscribersParam {
}

message ChannelRemoveSubscribersResponse {
}

// Privacy

message ChannelChangePrivacyParam {
    uint32 group_id = 1;
}

message ChannelChangePrivacyResponse {

}

message ChannelChangeDefaultPermissionParam {
}

message ChannelChangeDefaultPermissionResponse {
}

message ChannelRevokeLinkParam {
}

message ChannelRevokeLinkResponse {
}

message ChannelChangeUsernameParam {
}

message ChannelChangeUsernameResponse {
}

message ChannelBlockChannelParam {
}

message ChannelBlockChannelResponse {
}

// Messages

message ChannelDeleteMessagesParam {
    uint32 group_id = 1;
}

message ChannelDeleteMessagesResponse {

}

message ChannelClearHistoryParam {
}

message ChannelClearHistoryResponse {
}

// Others

message ChannelAvatarChangeParam {
}

message ChannelAvatarChangeResponse {
}

message ChannelSendDoingActionParam {
}

message ChannelSendDoingActionResponse {
}

message ChannelReportChannelParam {
}

message ChannelReportChannelResponse {
}

message ChannelReportMessageParam {
}

message ChannelReportMessageResponse {
}

// Views

message ChannelGetFullParam {
}

message ChannelGetFullResponse {
}

message ChannelGetMessagesListParam {
}

message ChannelGetMessagesListResponse {
}

message ChannelGetMediaListParam {
}

message ChannelGetMediaListResponse {
}

message ChannelGetAuthorsParam {
}

message ChannelGetAuthorsResponse {
}

message ChannelGetFollowersParam {
}

message ChannelGetFollowersResponse {
}

message ChannelGetFollowingsParam {
}

message ChannelGetFollowingsResponse {
}


message ChannelGetSubscribersParam {
}

message ChannelGetSubscribersResponse {
}


message ChannelBlockedParam {
}

message ChannelBlockedResponse {
}


// Dep

/*

message Param {
}

message Response {
}

*/


















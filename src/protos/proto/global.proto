syntax = "proto3";

package pb;

/////////////////////////// Docs ///////////////////////////
/*
Some notes:
  + Reduced: No bloated types > just those we need to now.


No Rpc_Account > Rpc_User + Rpc_Profile ,...

next: user relations, shop, product, message log, store, file
next2: message integrations: product, payment, contacts,...
gid = unique nano second time;
sid = scoped id; for future - bot platforms
cid = common id - seqentaily increase id for user, channels, groups, shops,..

imut = immutable fields
mut  = mutable fields
*/
// Words: reshared/username/

////////////////////////// Enums //////////////////////////

enum ProfileLevelEnum {
  LEVEL_NORMAL = 0;
  APP_ADMIN = 1;
  SUSPENDED = 2;
  DELETED_BY_OWNER = 3;
  DELETED_IRAN = 4;
  SUSPENDED_IRAN = 5;
}

/////////////////////////// Common Types ////////////////////
message Invoke { // imut all
  uint32 namespace = 6; // imut
  uint32 method = 1; // imut
  uint64 action_id = 2; // imut
  bool is_response = 3; // imut
  bytes rpc_data = 4; // imut
}

//==================== User ==================
message Contact { //todo
  fixed64 gid = 1;
  uint32 user_cid = 2;
  uint32 channel_cid = 10;
  int64 client_id = 3;
  string phone = 4;
  string first_name = 5;
  string last_name = 6;
  uint32 target_user_cid = 12;
  uint32 target_channel_cid = 15;
}

message User {
  uint32 cid = 1;
  string phone = 14;
  string email = 15;
  string password_hash = 17;
  string password_salt = 18;
  uint32 created_time = 36;
  uint32 version_time = 37;
  bool is_deleted = 38;
  bool is_banned = 39;

  repeated Profile profiles = 110;
  repeated Store stores = 113;
  repeated Session sessions = 102;
  ShoppingProfile shopping_profile = 111;

  // olds
  Channel UserCounts = 80; //???
}

message UserCounts {
  uint32 created_channels = 1; // Number of created channels
}

message Profile {
  uint32 cid = 1; // imut - profile_cid
  uint32 user_cid = 2;// imut
  Channel primary_channel = 100; // imut
  uint32 created_time = 103; // imut

  ProfileSettings setting = 107; // imut
  // Demonstration: collections > not really present > big > fetch with api
  repeated Channel channels = 104; // mut
  repeated Direct directs = 105;// mut
  repeated Group groups = 106; // mut
  repeated Contact contacts = 108; // mut
}

message ProfileSettings {
  uint32 profile_cid = 1; // imut - ???

}

//==================== Direct ==================
enum DirectTypeEnum {
  DEO = 0;
  PROFILE =1 ;
  CHANNEL =2;
  GROUP =3;
}

message Direct {
  fixed64 gid = 1;
  uint32 profile_cid = 5;
  DirectTypeEnum direct_type = 102;
  string custom_title = 9;
  fixed64 pin_time_ms = 10;
  uint32 unseen_count = 12;
  uint32 seq = 13;
  bool is_active = 22;
  uint32 mute_until = 29;
  uint32 created_time = 33;
  fixed64 sort_time_ms = 45;
  fixed64 sync_time_ms = 104;

  fixed64 my_last_seen_seq = 16;
  fixed64 my_last_seen_msg_id = 17;

  uint32 pined_msgs_count = 108;
  fixed64 visible_from_msg_gid = 11;

  Channel channel = 48;
  Contact contact = 49; // ?
  Group group = 50;
  Message last_message = 25;
  Message pinned_message = 26;
  GroupMember group_member = 43;
  DirectDraft draft = 46;
  DirectCustomNotification custom_notification = 47;

  // dep - del all below
  // For chat
  uint32 peer_profile_cid = 6; // ??
  fixed64 peer_last_seen_msg_id = 18; // ??
  fixed64 my_last_delivered_seq = 19; // ??
  fixed64 my_last_delivered_msg_id = 20; // ??
  fixed64 peer_last_delivered_msg_id = 21; // ??
  // For channel
  uint32 peer_channel_cid = 41; // ??

  // For group
  uint32 group_cid = 7; // ??
  FileMsg avatar = 44; // ??
}

message DirectDraft {
  string draft_text = 34;
  int64 drat_reply_to_msg_id = 35;
}

message DirectCustomNotification {
  bool alert = 13;
  bool preview = 14;
  bool led_on = 15;
  bool led_color = 16;
  bool vibrate = 17;
  bool popup = 18;
  bool sound = 19;
  bool priority = 20;
}

//==================== Messages ==================
message Message {
  fixed64 gid = 1; // imut
  uint32 by_profile_cid = 2; // imut
  MessageType message_type =107; // imut - mostly
  string text = 7;
  uint32 via_app_id = 12; // imut
  uint32 seq = 13; // imut
  uint32 edited_time = 17;
  uint32 created_time = 18; // imut
  bool verified = 111; // imut - verified system messages - 2 bytes tag

  MessageDeliveryStatues delivery_status = 105;
  uint32 delivery_time = 106; // mut-once

  bool deleted = 150; // maybe temp with a purge period - 2 bytes

  uint32 flags = 112;
  Message forward = 16; // forward is always live object from other channels, but not from other chats, groups
  Message reply_to = 50;

  // For channels, stores
  string title = 109; // For videos
  MessageCount counts = 101;
  MessageSetting setting = 102;
  Product Product = 110;

  repeated FileMsg files = 103;

  // add location, log, payment, proudcut, forward,
  // reply, pre msg, rich media

  // Views: channel, group, user,

  // ????
//  uint64 version_time = 108; //???
//  uint64 version_seq = 113; //???
//  uint64 previous_message_id = 180; //??
//
//  // Dep
//  uint32 by_channel_cid = 100; //?? if we add this groups need too
//  uint32 post_type1 = 3;
//  int64 media_id = 4;
//  int64 file_ref_id = 5;
//  string post_key = 6;
//  string rich_text = 8;
//  //  uint32 media_count = 9;
//  uint32 shared_to = 10;

}

enum MessageType {
  TEXT = 0;
  IMAGE = 1;
  VIDEO = 3;
  AUDIO = 5;
  VOICE = 7;
  GIF = 8;
  FILE = 9;
  POLL = 10;
  LOCATION = 11;
  LOG = 12;
  CONTACT = 13;
  WALLET = 15;
  // ??
  PRODUCT = 16;
  FORWARD = 17;

  //??
  POST_MEDIA = 100; // photo, video, gif
}

message MessageCount {
  fixed64 message_gid = 1; //??
  uint32 comments_count = 2;
  uint32 likes_count = 3;
  int64 views_count = 4;
  uint32 reshared_count = 5;
  uint32 chat_shared_count = 6;
}

message MessageSetting {
  uint32 disable_comment = 11;

}

enum MessageDeliveryStatues {
  UNKNOWN_MD = 0;
  SENDING = 1;
  SENT = 2; // Sent to server
  DELIVERED = 3;
  SEEN = 4;
  CONSUMED = 5; // listened, download, watched
  FAILED = 6; // blocked, restricted,
  // NOT_ABLE = 7;
}

message MessageLog {
  MessageLogType log_type = 10;
  uint32 by_user_cid = 2;
  uint32 by_channel_cid = 50;
  uint32 target_user_cid = 3;
  uint32 target_channel_cid = 4;
  Channel target_channel_view = 11;
}

enum MessageLogType {
  USER_JOINED = 0;
  USER_DELETED = 1;
  ROOM_CREATED = 2;
  MEMBER_ADDED = 3;
  MEMBER_KICKED = 4;
  MEMBER_LEFT = 5;
  ROOM_CONVERTED_TO_PUBLIC = 6;
  ROOM_CONVERTED_TO_PRIVATE = 7;
  MEMBER_JOINED_BY_INVITE_LINK = 8;
  ROOM_DELETED = 9;
  MISSED_VOICE_CALL = 10;
  MISSED_VIDEO_CALL = 11;
  MISSED_SCREEN_SHARE = 12;
  MISSED_SECRET_CHAT = 13;
  PINNED_MESSAGE = 14;
}

//==================== Channel ==================
message Channel {
  uint32 cid = 1;
  string user_name = 2;
  string first_name = 4; // title
  string last_name = 5;
  //  string channel_title = 3;
  uint32 creator_user_cid = 7;
  uint32 is_verified = 6;
  int64 avatar_count = 40;
  //  uint32 access_hash = 8;
  string about = 16;
  string invite_link_hash = 17;
  uint32 post_seq = 19;
  //  uint32 last_post_time = 35;
  fixed64 sort_time_ms = 20; //del
  fixed64 sync_time_ms = 21;
  uint32 created_time = 36;

  // conslidate in visivlity
  uint32 is_deleted = 38;
  uint32 is_banned = 39;

  ChannelNotificationSetting notification_setting = 90; // for owner
  ChannelPrivacy privacy = 9;
  ChannelType channel_type = 42;
  ChannelCounts counts = 41;
  Message last_message = 25;
  Message pinned_message = 26;
  Message avatar = 100;

  //  repeated Chat chats = 103;
  //  repeated Contact contacts= 103;
}

enum ChannelType {
  CHANNEL_UNKNOWN = 0;
  CHANNEL_PRIMARY = 1;
  CHANNEL_NORMAL = 2;
  CHANNEL_SAVES = 3;
  CHANNEL_STORE = 4;
}

enum ChannelPrivacy {
  CHANNEL_UNKNOWN_AB = 0;
  CHANNEL_OPEN = 1;
  CHANNEL_PRIVATE_LINK = 2;
  CHANNEL_CREATOR = 3; // For save
}

// This channel or profile?
message ChannelPrivacySetting {
  uint32 online_privacy = 10;
  uint32 call_privacy = 11;
  uint32 add_to_group_privacy = 12;
  uint32 seen_message_privacy = 13;
}

message ChannelNotificationSetting {
  bool social_led_on = 2;
  string social_led_color = 3;
  bool request_to_follow_you = 4;
  bool followed_channel = 5;
  bool accepted_channel_follow_request = 6;
  bool channel_message_liked = 7;
  bool channel_message_commented = 8;
  bool mentioned_channel_in_message = 9;
  bool mentioned_channel_in_comment = 10;
  bool contacts_joined = 11;
  bool direct_message = 12;
  bool direct_alert = 13;
  bool direct_preview = 14;
  bool direct_led_on = 15;
  bool direct_led_color = 16;
  bool direct_vibrate = 17;
  bool direct_popup = 18;
  bool direct_sound = 19;
  bool direct_priority = 20;
}

message ChannelCounts {
  uint32 followers_count = 20;
  uint32 following_count = 21;
  uint32 posts_count = 22;
  uint32 media_count = 23;
  uint32 photo_count = 24;
  uint32 video_count = 25;
  uint32 gif_count = 26;
  uint32 audio_count = 27;
  uint32 voice_count = 28;
  uint32 file_count = 29;
  uint32 link_count = 30;
  uint32 board_count = 31;
  uint32 pined_count = 32;
  uint32 likes_count = 33;
  uint32 reshared_count = 34;
}

//==================== Store ==================
message ShoppingProfile {

}

message Store {
  string address = 1;
  string phone = 2;

}

message Product {
  uint32 product_id = 1; // seq
  uint32 category_id = 53;
  string category = 50;
  string brand = 51;
  uint32 fee_rate = 3; //from 10_000 - 5% > 500
  uint32 sales_count = 5;
  uint32 price = 6;

  /*fixed64 gid = 1; // same as message.gid
  fixed64 product_id = 101; // seq
  uint32 by_user_cid = 2;
  uint32 by_channel_cid = 100;
  string rich_text = 8;
  uint32 seq = 13;
  uint32 created_time = 18;*/
}

message ProductPriceInfo {
  uint32 price = 1;
  uint32 discount_price = 6;
  uint32 rate = 3; // from 1000
}

//==================== Group ==================
message Group {
  uint32 cid = 1;
  string group_title = 3;
  string user_name = 4;
  uint32 creator_user_cid = 7;
  uint32 creator_channel_cid = 31;
  GroupPrivacy group_privacy = 8;
  bool history_viewable = 9;
  uint32 seq = 10;
  uint32 avatar_count = 14;
  string about = 15;
  string invite_link_hash = 16;
  uint32 members_count = 17;
  uint32 admins_count = 18;
  uint32 moderator_counts = 19;
  fixed64 sort_time = 20;
  fixed64 sync_time = 40;
  uint32 created_time = 21;
  bool is_deleted = 23;
  bool is_banned = 24;
  Message last_message = 25;
  Message pinned_message = 26;
  FileMsg avatar = 27;
}

enum GroupPrivacy {
  GROUP_UNKNOWN_GP = 0;
  GROUP_OPEN = 1; // via username
  GROUP_PRIVATE_LINK = 2;
}

enum GroupMemberRole {
  MEMBER_Unknown = 0;
  MEMBER_CREATOR = 1;
  MEMBER_MODERATOR = 3;
  MEMBER_NORMAL_USER = 2;
}

message GroupMember {
  int64 gid = 1;
  int64 group_cid = 2;
  uint32 user_cid = 3;
  uint32 channel_cid = 8;
  uint32 by_user_cid = 4;
  uint32 by_channel_cid = 7;
  GroupMemberRole group_role = 5;
  uint32 created_time = 6;
}

//==================== Others ==================

message FileMsg {
  fixed64 gid = 1;
  uint32 access_hash = 2;
  uint32 file_type = 3;
  uint32 width = 4;
  uint32 height = 5;
  string extension = 6;
  uint32 user_cid = 7;
  bytes data_thumb = 8;
  bytes data = 9;
}

//==================== Utils ==================

enum SessionPlatform {
  UNKNOWN_PLATFORM = 0;
  ANDROID = 1;
  IOS = 2;
  MAC_OS = 3;
  WINDOWS = 4;
  LINUX = 5;
  BLACK_BERRY = 6;
  Web = 7;
}

message Session {
  fixed64 gid = 1;
  string session_uuid = 2;
  uint32 user_cid = 3;
  string last_ip_address = 4;
  string user_agent = 8;
  SessionPlatform platform = 9;
  uint32 app_version = 5;
  uint32 active_time = 6;
  uint32 created_time = 7;
}

message Sms {
  fixed64 gid = 1;
  string hash = 2;
  string app_uuid = 3;
  string client_phone = 4;
  uint32 genrated_code = 5;
  string sms_sender_number = 6;
  string sms_send_statues = 7;
  string sms_http_body = 8;
  string err = 9;
  string carrier = 10;
  bytes country = 11;
  uint32 is_valid_phone = 12;
  uint32 is_confirmed = 13;
  uint32 is_login = 14;
  uint32 is_register = 15;
  uint32 retried_count = 16;
  uint32 ttl = 17;
}

//==================== Views ==================

